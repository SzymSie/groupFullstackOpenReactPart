{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\redditReactGroupPlayground\\\\src\\\\Apps\\\\AppExercise106.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Statistics } from \"../unicafe/Statistics\";\nimport { Button } from \"../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppExercise106 = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n\n  const handleClick = input => {\n    setAll(all + 1);\n\n    if (input === \"good\") {\n      setGood(good + 1);\n    }\n\n    if (input === \"neutral\") {\n      setNeutral(neutral + 1);\n    }\n\n    if (input === \"bad\") {\n      setBad(bad + 1);\n    }\n  };\n\n  let average = (good * 1 + neutral * 0 + bad * -1) / all;\n  let positive = good * 1 / all;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: () => handleClick(\"good\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: () => handleClick(\"neutral\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: () => handleClick(\"bad\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), all > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all,\n      average: average,\n      positive: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" No feedback given \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppExercise106, \"uTssgC4nlUSepBgkUpbW/ujAc84=\");\n\n_c = AppExercise106;\nexport default AppExercise106;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppExercise106\");","map":{"version":3,"names":["useState","Statistics","Button","AppExercise106","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","handleClick","input","average","positive"],"sources":["C:/vscode/redditReactGroupPlayground/src/Apps/AppExercise106.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Statistics } from \"../unicafe/Statistics\";\r\nimport { Button } from \"../components/Button\";\r\n\r\nconst AppExercise106 = () => {\r\n  // save clicks of each button to its own state\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [all, setAll] = useState(0);\r\n\r\n  const handleClick = (input) => {\r\n    setAll(all + 1);\r\n    if (input === \"good\") {\r\n      setGood(good + 1);\r\n    }\r\n    if (input === \"neutral\") {\r\n      setNeutral(neutral + 1);\r\n    }\r\n    if (input === \"bad\") {\r\n      setBad(bad + 1);\r\n    }\r\n  };\r\n\r\n  let average = (good * 1 + neutral * 0 + bad * -1) / all;\r\n  let positive = (good * 1) / all;\r\n\r\n  return (\r\n    <div>\r\n      <h2>give feedback</h2>\r\n      <Button text={\"good\"} onClick={() => handleClick(\"good\")}></Button>\r\n      <Button text={\"neutral\"} onClick={() => handleClick(\"neutral\")}></Button>\r\n      <Button text={\"bad\"} onClick={() => handleClick(\"bad\")}></Button>\r\n\r\n      <h2>statistics</h2>\r\n      {all > 0 ? (\r\n        <Statistics \r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          all={all}\r\n          average={average}\r\n          positive={positive}\r\n        />\r\n      ) : (\r\n        <div> No feedback given </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppExercise106;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAAD,CAA9B;EACA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;;EAEA,MAAMY,WAAW,GAAIC,KAAD,IAAW;IAC7BF,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;;IACA,IAAIG,KAAK,KAAK,MAAd,EAAsB;MACpBR,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;IACD;;IACD,IAAIS,KAAK,KAAK,SAAd,EAAyB;MACvBN,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;IACD;;IACD,IAAIO,KAAK,KAAK,KAAd,EAAqB;MACnBJ,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;IACD;EACF,CAXD;;EAaA,IAAIM,OAAO,GAAG,CAACV,IAAI,GAAG,CAAP,GAAWE,OAAO,GAAG,CAArB,GAAyBE,GAAG,GAAG,CAAC,CAAjC,IAAsCE,GAApD;EACA,IAAIK,QAAQ,GAAIX,IAAI,GAAG,CAAR,GAAaM,GAA5B;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,IAAI,EAAE,MAAd;MAAsB,OAAO,EAAE,MAAME,WAAW,CAAC,MAAD;IAAhD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,IAAI,EAAE,SAAd;MAAyB,OAAO,EAAE,MAAMA,WAAW,CAAC,SAAD;IAAnD;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,IAAI,EAAE,KAAd;MAAqB,OAAO,EAAE,MAAMA,WAAW,CAAC,KAAD;IAA/C;MAAA;MAAA;MAAA;IAAA,QAJF,eAME;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,EAOGF,GAAG,GAAG,CAAN,gBACC,QAAC,UAAD;MACE,IAAI,EAAEN,IADR;MAEE,OAAO,EAAEE,OAFX;MAGE,GAAG,EAAEE,GAHP;MAIE,GAAG,EAAEE,GAJP;MAKE,OAAO,EAAEI,OALX;MAME,QAAQ,EAAEC;IANZ;MAAA;MAAA;MAAA;IAAA,QADD,gBAUC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA7CD;;GAAMZ,c;;KAAAA,c;AA+CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}